## initial recording duration patch for vdr 1.7.18
--- recording.h.orig	2011-05-25 21:50:42.229053992 +0200
+++ recording.h	2011-05-25 21:37:27.399053992 +0200
@@ -88,6 +88,7 @@
   mutable char *name;
   mutable int fileSizeMB;
   int channel;
+  int duration;
   int instanceId;
   bool isPesRecording;
   double framesPerSecond;
@@ -111,6 +111,7 @@
   const char *Name(void) const { return name; }
   const char *FileName(void) const;
   const char *Title(char Delimiter = ' ', bool NewIndicator = false, int Level = -1, bool Original = true) const;
+  const int Duration(void) const { return duration; }
   const cRecordingInfo *Info(void) const { return info; }
   void SetStartTime(time_t Start);
   const char *PrefixFileName(char Prefix);
@@ -117,6 +119,7 @@
   bool IsNew(void) const { return GetResume() <= 0; }
   bool IsEdited(void) const;
   bool IsPesRecording(void) const { return isPesRecording; }
+  void SetDuration(int duration) { this->duration = duration; }
   void ReadInfo(void);
   bool WriteInfo(void);
   bool Delete(void);
--- recording.c.orig	2011-05-25 21:50:52.499053998 +0200
+++ recording.c	2011-05-25 21:40:34.759053998 +0200
@@ -1103,7 +1103,16 @@
                           r->fileSizeMB = DirSizeMB(buffer);
                           r->deleted = time(NULL);
                           }
+                       
+                       else
+                       {
+                          cIndexFile *index = new cIndexFile(r->FileName(), false, r->IsPesRecording());
+                          int d = -1; 
+                          if ( index && index->Ok() ) { d = (int) (index->Last() / SecondsToFrames(60, r->FramesPerSecond())); }
+                          delete index;
+			  r->SetDuration(d);
                        }
+		    }
                     else
                        delete r;
                     }
