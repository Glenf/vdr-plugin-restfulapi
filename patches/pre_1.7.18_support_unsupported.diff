diff -Nur a/channels.cpp b/channels.cpp
--- a/channels.cpp	2011-07-27 22:03:31.525000018 +0200
+++ b/channels.cpp	2011-07-29 15:35:35.515965000 +0200
@@ -225,7 +225,12 @@
   serChannel.Group = StringExtension::UTF8Decode(group);
   serChannel.Transponder = channel->Transponder();
   serChannel.Stream = StringExtension::UTF8Decode(((std::string)channel->GetChannelID().ToString() + (std::string)suffix).c_str());
+  // TODO: There are an atsc Patch
+  #if APIVERSNUM >= 10714
   serChannel.IsAtsc = channel->IsAtsc();
+  #else
+  serChannel.IsAtsc = false;
+  #endif
   serChannel.IsCable = channel->IsCable();
   serChannel.IsSat = channel->IsSat();
   serChannel.IsTerr = channel->IsTerr();
@@ -262,7 +267,12 @@
   s->write(cString::sprintf("  <param name=\"group\">%s</param>\n", StringExtension::encodeToXml( group ).c_str()));
   s->write(cString::sprintf("  <param name=\"transponder\">%i</param>\n", channel->Transponder()));
   s->write(cString::sprintf("  <param name=\"stream\">%s</param>\n", StringExtension::encodeToXml( ((std::string)channel->GetChannelID().ToString() + (std::string)suffix).c_str()).c_str()));
+  // TODO: There are an atsc Patch
+  #if APIVERSNUM >= 10714
   s->write(cString::sprintf("  <param name=\"is_atsc\">%s</param>\n", channel->IsAtsc() ? "true" : "false"));
+  #else
+  s->write(cString::sprintf("  <param name=\"is_atsc\">%s</param>\n", false ? "true" : "false"));
+  #endif
   s->write(cString::sprintf("  <param name=\"is_cable\">%s</param>\n", channel->IsCable() ? "true" : "false"));
   s->write(cString::sprintf("  <param name=\"is_sat\">%s</param>\n", channel->IsSat() ? "true" : "false"));
   s->write(cString::sprintf("  <param name=\"is_terr\">%s</param>\n", channel->IsTerr() ? "true" : "false"));
diff -Nur a/recordings.cpp b/recordings.cpp
--- a/recordings.cpp	2011-07-27 22:03:31.529000018 +0200
+++ b/recordings.cpp	2011-07-29 15:40:54.980949000 +0200
@@ -1,5 +1,9 @@
 #include "recordings.h"
 
+#if !(defined(USE_STREAMDEVEXT) || defined(RESTFULAPIPATCHED)) && APIVERSNUM < 10705
+  #error STREAMDEVEXT patch is required before vdr 1.7.5. Alternative you could also add "const cEvent *GetEvent(void) const { return event; }" to the public interface of the "cRecordingInfo" class in "recording.h", then set "DEFINES += -DRESTFULAPIPATCHED" in "make.global"
+#endif
+
 void RecordingsResponder::reply(std::ostream& out, cxxtools::http::Request& request, cxxtools::http::Reply& reply)
 {
   if ( request.method() == "GET" ) {
@@ -66,9 +66,17 @@
 int getRecordingDuration(cRecording* m_recording) {
   int RecLength = 0;
   if ( !m_recording->FileName() ) return 0;
+  #if APIVERSNUM >= 10703
   cIndexFile *index = new cIndexFile(m_recording->FileName(), false, m_recording->IsPesRecording());
+  #else
+  cIndexFile *index = new cIndexFile(m_recording->FileName(), false);
+  #endif
   if ( index && index->Ok()) {
+     #if APIVERSNUM >= 10703
      RecLength = (int) (index->Last() / SecondsToFrames(60, m_recording->FramesPerSecond()));
+     #else
+     RecLength = (int) (index->Last() / SecondsToFrames(60));
+     #endif
   }
   delete index;
 
@@ -185,7 +193,11 @@
   serRecording.FileName = StringExtension::UTF8Decode(recording->FileName());
   serRecording.IsNew = recording->IsNew();
   serRecording.IsEdited = recording->IsEdited();
+  #if APIVERSNUM >= 10703
   serRecording.IsPesRecording = recording->IsPesRecording();
+  #else
+  serRecording.IsPesRecording = true;
+  #endif
   serRecording.Duration = RecordingCache::get()->Duration(recording);
   serRecording.EventTitle = eventTitle;
   serRecording.EventShortText = eventShortText;
@@ -237,7 +249,11 @@
   s->write(cString::sprintf("  <param name=\"filename\">%s</param>\n", StringExtension::encodeToXml(recording->FileName()).c_str()) );
   s->write(cString::sprintf("  <param name=\"is_new\">%s</param>\n", recording->IsNew() ? "true" : "false" ));
   s->write(cString::sprintf("  <param name=\"is_edited\">%s</param>\n", recording->IsEdited() ? "true" : "false" ));
+  #if APIVERSNUM >= 10703
   s->write(cString::sprintf("  <param name=\"is_pes_recording\">%s</param>\n", recording->IsPesRecording() ? "true" : "false" ));
+  #else
+  s->write(cString::sprintf("  <param name=\"is_pes_recording\">%s</param>\n", true ? "true" : "false" ));
+  #endif
   s->write(cString::sprintf("  <param name=\"duration\">%i</param>\n", RecordingCache::get()->Duration(recording)));
   s->write(cString::sprintf("  <param name=\"event_title\">%s</param>\n", StringExtension::encodeToXml(eventTitle).c_str()) );
   s->write(cString::sprintf("  <param name=\"event_short_text\">%s</param>\n", StringExtension::encodeToXml(eventShortText).c_str()) );
diff -Nur a/remote.cpp b/remote.cpp
--- a/remote.cpp	2011-07-27 22:03:31.530000018 +0200
+++ b/remote.cpp	2011-07-29 15:32:26.717606000 +0200
@@ -77,7 +77,9 @@
   append( "recordings" , 	kRecordings 	);
   append( "setup" , 		kSetup 		);
   append( "commands" ,		kCommands 	);
+  #if APIVERSNUM >= 10715
   append( "user0" , 		kUser0 		);
+  #endif 
   append( "user1" , 		kUser1 		);
   append( "user2" , 		kUser2 		);
   append( "user3" , 		kUser3 		);
